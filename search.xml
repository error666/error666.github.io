<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[最近发生的一些事]]></title>
    <url>%2F2020%2F01%2F18%2F2020-01-18%2F</url>
    <content type="text"><![CDATA[双十一的时候蹲点以相对较低的一个价格拿下了一台ipad pro，幻想着能把它作为mac的第二屏幕来使用。然而，吃了没有做好调查的亏。 拿到pad的时候，iPadOS还没有上线，考虑到自己人品不太行，就想等着iPadOS正式上线了再体会一下新功能。现在iPadOS终于来了，愉快地更新了pad和mac后，我发现，这个叫做“随航”的炫酷的功能，我用不了，因为它只支持16年版本之后的macbook pro……我的是15年的mac，玩不了了。 现场状况一度非常尴尬。 许久没有写博客，其实想写点这次升级mac遇到的坑作为分享来着，但是琐琐碎碎地写下了这些之后，感觉这种经历充其量只能算是最近遇到的一件琐事罢了，算了，好像也没有什么技术类的东西值得分享的。 最近，其实，我的人生发生了很多事。我指，仿佛翻天覆地般的，那么大的事。但是，就是，“欲辨已忘言” 的状态。 该从何说起呢？ 从，换了个城市说起？还是从，换了个很轻松的工作希望能用业余时间提升自己结果发现我并不能有效利用业余时间，说起？还是从，大学时最好的朋友要结婚了，说起？还是从……2020年，新年伊始，我失去了我的奶奶，说起？ 明明是新年，但是我和所有欢乐的气氛，都格格不入。喜气洋洋的街道，热热闹闹的人群，还有大家满脸的笑容……我却只想时间能够倒流。只想时间把奶奶还给我。]]></content>
      <categories>
        <category>Life</category>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>nonsense</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[阿里云CES踩坑日记]]></title>
    <url>%2F2019%2F03%2F29%2F2019032901%2F</url>
    <content type="text"><![CDATA[Background:操作系统：centos7需求：部署和开发公司业务测试环境。 springboot后台服务+VUE前台界面。 数据库采用mysql。 踩过的坑们mysql5.7问题： 因为开发的时候本地环境为mysql5.6，看着这俩就差了一辈，心里盘算着可能两者差别不大，故而愉快地跟着官网的提示yum了mysql5.7…… 等把程序愉快地给跑起来后，就哭了。 后台一直报数据库连接错误： nested exception is org.apache.ibatis.exceptions.PersistenceException: \n### Error querying database. Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is com.alibaba.druid.pool.GetConnectionTimeoutException: wait millis 60004, active 0, maxActive 10, creating 1\ 最开始以为是jdbc信息处写localhost的问题。去把配置文件改为127.0.0.1后，再试，依然报一样的问题。 慌了。 搜了一圈网上关于org.springframework.jdbc.CannotGetJdbcConnectionException的讨论，几乎都是配置文件配得有问题。 就没有一个人提一下jdbc？ 终于用jdbc和mysql5.7作为关键字搜索后搜到： mysql5.7和mysql8 驱动已经由 “com.mysql.jdbc.Driver” 变更为: private static final String DB_DRIVER = “com.mysql.cj.jdbc.Driver”; fine…… 向下兼容这种事，就是个笑话。 随意瞟了眼，发现mysql5.7的配置坑还不少，不想费事了，索性给换成mysql5.6吧。 你看官方还有教你装mysql5.6的文档。甚好。 个球球！！！ 阿里云官方那个装mysql5.6的文档更是讲得特别玄幻！为什么有yum你不用？不就慢了点么？你在秀linux语法么？想让大家跟着敲的时候更有成就感么？为什么不给出最直接简洁官方的方法？ …… 好的，我知道了，愿意用yum的都是会去官网看mysql自己的文档的。 你们不屑教是吧。 fine…… 那你那个cmake它也不好用啊喂！ 最后，参考了两篇博客文章的方法重新安装了mysql5.6： 1.https://www.cnblogs.com/renjidong/p/7047396.html2.https://blog.csdn.net/pengjunlee/article/details/81212250 第一步：先删除mysql5.7，不拘泥于方法，你要喜欢 rm -rf也行呀（。） 第二步：下载mysql5.6的rpm包 1wget http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm 第三步：rpm上一步下载的包，拿到安装文件 1rpm -ivh mysql-community-release-el6-5.noarch.rpm 第四步：检查一下安装包,看到列表中包含mysql-connectors-community/x86_64，就没有问题了。 1yum repolist all | grep mysql 第五步：如果上一步的结果中包含多个community，例如包含mysql57-community-dmr/x86_64，那在下一步安装时会报错，删除之 1yum -y remove mysql57-community-dmr/x86_64 第六步：接下来直接直接yum就可以了 1yum install mysql-community-server 第七步：mysql5.6刚安装时，默认是没有密码的，要给它设置个密码。 第八步：直接运行mysql_secure_installation进行一些安全配置，根据实际情况输入yes或者no就行了。不建议一路yes下去……我是有不少no的…… 12mysql_secure_installation 阿里云STS授权操作OSS的官方文档SDK调用示例有误 如果直接copy这个例子然后改上自己的参数跑起来后，它会一直报各种神奇的错。 官方文档居然好意思说：直接使用STS endpoint，前两个参数留空，无需添加region ID …… 请使用endpoint为参数跑起来的同志留言告诉我你是怎么跑起来的。 卡了两个小时，copy了一个网上搜来的例子，没有使用endpoint，而是直接使用reginId，一次通过。 坑啊……也不知道是不是因为年久失修，还是我copy姿势有误。 修改后正确的代码如下(获得OSS控制权限，java版本)： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182public static AssumeRoleResponse getRole(AliyunConfig aliyunConfig, String sessionname, Long exptime) &#123; log.debug("getRole: start..."); // TODO 安全性控制 String regionId = aliyunConfig.getRegionId(); String accessKeyId = aliyunConfig.getStsAccessKeyId(); String accessKeySecret = aliyunConfig.getStsAccessKeySecret(); String roleArn = aliyunConfig.getRoleArn(); String roleSessionName = sessionname; String policy = "&#123;\n" + " \"Version\": \"1\",\n" + " \"Statement\": [\n" + " &#123;\n" + " \"Effect\": \"Allow\",\n" + " \"Action\": [\n" + " \"oss:DeleteObject\",\n" + " \"oss:ListParts\",\n" + " \"oss:AbortMultipartUpload\",\n" + " \"oss:PutObject\",\n" + " \"oss:GetObject\"\n" + " ],\n" + " \"Resource\": [\n" + " \"acs:oss:*:*:" + aliyunConfig.getBucketName() + "\",\n" + " \"acs:oss:*:*:" + aliyunConfig.getBucketName() + "/*\"\n" + " ]\n" + " &#125;\n" + " ]\n" + "&#125;"; AssumeRoleResponse response = null; try &#123; // 创建一个 Aliyun Acs Client, 用于发起 OpenAPI 请求 IClientProfile profile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret); DefaultAcsClient client = new DefaultAcsClient(profile); // 创建一个 AssumeRoleRequest 并设置请求参数 final AssumeRoleRequest request = new AssumeRoleRequest(); //POST请求 request.setMethod(MethodType.POST); //https协议 request.setProtocol(ProtocolType.HTTPS); //持续时间 request.setDurationSeconds(exptime); //角色id request.setRoleArn(roleArn); //应用程序标识(自己定义) request.setRoleSessionName(roleSessionName); //在赋予角色的同时,还赋予其他的权限策略 request.setPolicy(policy); // 发起请求，并得到response log.debug("Start to getAcsResponse, req:" + JSONObject.toJSONString(request)); response = client.getAcsResponse(request); log.debug("End of getAcsResponse, resp:" + JSONObject.toJSONString(response)); &#125; catch (ClientException e) &#123; log.error("Failed："); log.error("Error code: " + e.getErrCode()); log.error("Error message: " + e.getErrMsg()); log.error("RequestId: " + e.getRequestId()); &#125; log.debug("getRole: end..."); return response; &#125;public static void main(String[] args) throws Exception &#123; //aliyunconfig是自定义的映射阿里云配置参数的实体类 AliyunConfig config = new AliyunConfig(); AliyunConfig aliyunConfig = new AliyunConfig(); aliyunConfig.setStsAccessKeyId("&lt;stsaccesskeyid&gt;"); aliyunConfig.setStsAccessKeySecret("stsaccesskeysecret"); aliyunConfig.setRoleArn("roleArn"); aliyunConfig.setEndpoint("&lt;endpoint&gt;"); aliyunConfig.setRegionId("&lt;regionId,如cn-shanghai&gt;"); aliyunConfig.setBucketName("&lt;没什么用，可以省略了&gt;"); AssumeRoleResponse response = getRole(aliyunConfig, "test", 900l); System.out.println("Expiration: " + response.getCredentials().getExpiration()); System.out.println("Access Key Id: " + response.getCredentials().getAccessKeyId()); System.out.println("Access Key Secret: " + response.getCredentials().getAccessKeySecret()); System.out.println("Security Token: " + response.getCredentials().getSecurityToken()); System.out.println("RequestId: " + response.getRequestId()); &#125;]]></content>
      <categories>
        <category>work_related</category>
        <category>坑</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>神奇bug</tag>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[把Excel表格的表设计转成建表sql的python脚本]]></title>
    <url>%2F2019%2F01%2F10%2F2019011001%2F</url>
    <content type="text"><![CDATA[环境：Python版本 – 3.6.2 表格格式: 字段描述 字段 字段类型 备注 id int(11) NOT NULL jobname varchar(80) NOT NULL description varchar(400) DEFAULT NULL addtime varchar(19) NOT NULL 数据记录创建系统时间 status tinyint(1) NOT NULL DEFAULT ‘0’ 状态 0:正常 1:暂停 schedule blob 执行规则 Excel文件样例: 每个表之间用四个#分割 表头不能少 primary key放在第一位 脚本代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152import xlrddata = xlrd.open_workbook('my_db_design.xlsx')table = data.sheets()[0]nrows = table.nrowsncols = table.ncolsstep = 0sql_str = ''# some prepared parameterstname = ''tnamecomm = ''pkfieldn = ''for i in range(nrows): if table.cell(i,0).value == '####': step = 0 # empty parameters tname = '' tnamecomm = '' pkfieldn = '' sql_str += "\n" continue elif step == 0: tnamecomm = table.cell(i,1).value tname = table.cell(i,0).value if tname.strip()=='': break tname = tname.strip() sql_str += "/* %s */" % tnamecomm + '\n' sql_str += "drop table if exists %s;\n" % tname sql_str += "create table %s(\n" % tname # move to next step step += 1 continue elif step == 1: # skip column name rows step += 1 continue elif step == 2: pkfieldn = table.cell(i,1).value sql_str += "%s %s AUTO_INCREMENT comment '自增加主键', \n" % (table.cell(i,1).value,table.cell(i,2).value) # move to next step step += 1 continue elif step == 3: # exclude empty value rows if table.cell(i,1).value != '': sql_str += " %s %s comment '%s', \n" % (table.cell(i,1).value,table.cell(i,2).value,table.cell(i,3).value) if i+1 &lt; nrows and table.cell(i+1,0).value == '####': sql_str += "primary key (%s) \n" % pkfieldn sql_str += ") ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 comment '%s'; \n" % tnamecomm continueprint (sql_str) 执行结果：]]></content>
      <categories>
        <category>work_related</category>
        <category>tricks</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vultr主机试玩笔记]]></title>
    <url>%2F2019%2F01%2F09%2F2019010901%2F</url>
    <content type="text"><![CDATA[能ping通，ssh连不上，连端口22报timeout，连其他端口通通refused经过一番搜索和摸索，结论是：这个ip被墙了。解决方法：换ip。放弃这台主机，重新申请建一台，直到试到没有被墙的。= |||听说vultr上大多数ip都被墙了。我试了三个，终于试到了一个能ssh上的。 nginx配置好后，访问ip，看不到欢迎页，网络连接被拒了大概是出于安全考虑，vultr的主机大多数只开放一个22接口让你ssh，其他接口全部关闭。解决方法：开启80接口。我的主机OS：CentOS 7 x64首先查看一下防火墙状态： 1firewall-cmd --state 确认防火墙正在正常运行后，继续，因为我这里Nginx开在80端口，所以port=后面的数字就是80，如果配其他端口应该也是一样的道理： 1firewall-cmd --zone=public --add-port=80/tcp --permanent 然后重启一下防火墙，让刚刚修改的配置生效 1firewall-cmd --reload 完成。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>神奇bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用APlayer在Hexo（NexT主题）静态博客中插入音乐]]></title>
    <url>%2F2019%2F01%2F08%2F2019010801%2F</url>
    <content type="text"><![CDATA[嗯……源于个人爱好，总想着在博客中插点BGM。于是就愉快地上网搜了一圈怎么在Hexo中加音乐。看了一圈，发现很多人都提到了APlayer。看了看使用效果，确实不错，于是就它了=v=+。然后就发现问题了，怎么搜到多数范例都是在slider中加背景音乐？答案倒也不难猜，估计是某个大大先这么搞了，写好了使用方法的文章，然后大家就一个抄一个。完美。copy&amp;paste大法好。完美。 那我就来搞些不一样的吧。我想要的是在首页标题下插入播放器。 效果图（画红框框部分）： hexo版本：3.8.0NexT版本：v6.7.0 版本不同，可能实现上也会有所不同。 background首先我们需要理解APlayer是什么。来，官方文档走一发：APlayer官方文档 根据官方文档第一句，“Wow, such a beautiful HTML5 music player”，我们可以很清楚而直观地了解到了，APlayer，是一个HTML5音乐播放器，一个很漂亮的播放器。他的本质是一个网页播放器。根据我的理解，他就是一个html插件。他当然遵循所有html插件的使用方法。那就很好办了。 引入源码JS理解了APlayer的本质后就好办了嘛，直接在页面引入它的核心JS，然后调用即可。搞起。 使用npm安装：npm install aplayer --save 使用Yarn安装yarn add aplayer 或者……直接把JS源码复制下来，手动拉进我们项目，嘿嘿……不需要改变播放器颜色的话，只需要把.min.js和min.css文件拿到就行。APlayer.min.jsAPlayer.min.css 官方也很贴心的提供了cdn。所以我使用了官方提供的cdn外链。 打开~[blog项目]/themes/next/layout/_layout.swig 在header部分增加引入代码像这样： 我用了cdn那么就是： 12&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.js" integrity="sha256-6Y7CJDaltoeNgk+ZftgCD9jLgmGv4xKUo8nQ0HgAwVo=" crossorigin="anonymous"&gt;&lt;/script&gt;&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.10.1/APlayer.min.css" integrity="sha256-uqQQGnDcmRKvhKwc5Vm4XT1GQ2oV6t1U0NR2N9tV+BQ=" crossorigin="anonymous" /&gt; 如果你是使用mpm/yarn安装到项目中的话，代码就更简洁了 12&lt;link rel="stylesheet" href="APlayer.min.css"&gt;&lt;script src="APlayer.min.js"&gt;&lt;/script&gt; 大功告成。下面就只要去想用的地方调用起来就行啦。 在首页插入播放器打开~[blog项目]/themes/next/layout/index.swig这个就是NexT主题渲染首页时用的swig文件。基本思路就是在这里加入渲染播放器需要的div。然后再加上调用APlayer的JS。因为这是一个.swig文件，嗯……那大家都长得像一点可能比较好。所以我们也来新建一个swig文件吧。 打开~[blog项目]/themes/next/layout/_partials文件夹新建bgmusic.swig文件，把我们的播放器代码写在这里。普通JS的写法就行。 例如：12345678910111213141516&lt;div id="aplayer_index"&gt;&lt;/div&gt;&lt;/center&gt; &lt;script type="text/javascript"&gt; const ap2 = new APlayer(&#123; container: document.getElementById('aplayer_index'), lrcType: 1, audio: [&#123; name: 'Cold Blood', artist: 'Dave Not Dave', url: 'music.mp3', cover: 'doge.jpg', lrc: '' &#125;]&#125;);&lt;/script&gt; 然后在到~[blog项目]/themes/next/layout/index.swig文件中，找个合适的位置插入1&#123;%include &apos;_partials/bgmusic.swig&apos; %&#125; 例如我打算放在post预览模块的上方，所以就塞在了这里： 这里我使用的音乐是本地音乐。所以url就直接使用相对路径。 音乐文件和封面图片的jpg文件直接塞进~[blog项目]/themes/next/source/文件夹里，就可以像我上面写的这样调用啦。 (比较建议使用外链，一个是速度比较快，再一个是可以有效解决不同页面路径变化造成音乐无法播放的问题。不过现在很难找到什么外链网站……github这么善良地允许上传音乐文件了，我就愉快地塞博客文件里用了。头疼的就是页面加载速度再次被拖慢了。) 然后hexo clean、hexo g、hexo s，哟西，可以看到效果了。 ———————————— 在非首页的页面中插入APlayer播放器众所周知，我们的markdown也是支持html语法的，所以，当然可以加点音乐咯~例如加入这段代码： 123456789101112131415&lt;div id="aplayer"&gt;&lt;/div&gt;&lt;script type="text/javascript"&gt;const ap = new APlayer(&#123; container: document.getElementById('aplayer'), lrcType: 1, audio: [&#123; name: '歌名', artist: '歌手', url: '你的音乐资源的地址', cover: '你的封面资源的地址', lrc: '歌词' &#125;]&#125;);&lt;/script&gt; 就可以在这个页面放音乐了。哟西，搞定，收工。 ❤特别感谢APlayer的作者们和Next主题的开发者们，感谢你们开发出这么好玩的工具。❤ 搬砖去。搬砖去。 const ap = new APlayer({ container: document.getElementById('aplayer'), lrcType: 1, audio: [{ name: '什么都为时已晚', artist: 'V.A.', url: '../../../../about/bgm.mp3', cover: '../../../../about/doge.jpg', lrc: '[ti:何かもう手遅れな]\n[00:05.500]即便害怕这个社会\n[00:09.500]不工作的话就活不下去\n[00:12.500]即使如此 可怕的东西还是很可怕\n[00:15.100]人生is over\n[00:18.100]不敢与别人四目相对\n[00:20.540]想要搭话却发不出声\n[00:25.200]这是不是什么疾病啊？\n[00:27.100]人生 has been over\n[00:32.180]「友情？恋爱？只存在二次元的东西吧？」\n[00:36.180]即使按自己的步调努力了\n[00:38.550]结果上还是得不到回报\n[00:42.300]这是因为我还不够努力吧\n[00:45.200] \n[00:48.210]至少想变得和大家一样\n[00:51.120]但究竟要怎么做才行呢\n[00:54.120]基本上什么都晚了\n[00:57.030]\n[01:00.000]「生产性皆无 消费性拔群（就是这样的存在）」\n[01:05.510]一点开心的事情都没有\n[01:08.590]所有的事情都觉得麻烦\n[01:12.100]于是不是上网就是睡觉\n[01:15.100]\n[01:18.020]自己一定还算是比较好的吧\n[01:20.520]擅自装作不幸的样子而已\n[01:24.020]最讨厌那样自己\n[01:26.520]\n[01:30.020]（团体活动之后 在心里 连呼吸都想死）\n[01:35.520]无论多讨厌自己\n[01:37.520]「去死不就好了」听到这句就停止了思考\n[01:41.520]再想下去也很麻烦\n[01:44.520]\n[01:47.520]为什么 从什么时候开始变成了这样\n[01:50.520]这一定是谁的阴谋吧\n[01:54.320]全都是自己的错噢\n[01:56.520]\n[01:59.520]\n[02:02.520]但是不抱有希望可是不行的\n[02:05.520]「未来一定是七彩色的」' }] });]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>JavaScript</tag>
        <tag>frontend</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F01%2F02%2FHello%20World!%2F</url>
    <content type="text"><![CDATA[打开了文档，却写不出东西。憋了很久还是敲下了Hello,world！还真是挺没创意的。（。 想到什么就随便写点什么吧。也许以后回头看会觉得很有意义。hhh。😂虽然这个文档新建于1月2日，但是写下这些东西的现在是1月3日。今天搬完砖还有些时间，就想着把小博客弄出个能看的样子来吧，于是就捣鼓成了现在这个样。给博客装了推崇者很多的NexT主题，这个主题真的蛮集大成的，很多东西都可以在配置文件中一键开启。玩着玩着，恍惚间想起来小时候玩百度空间和QQ空间的日子，甚是怀念……（暴露年龄向hhh历史是螺旋上升的。嗯。循环往复，却又有所升级。 今天就写到这里吧。]]></content>
      <categories>
        <category>Life</category>
        <category>Diary</category>
      </categories>
      <tags>
        <tag>nonsense</tag>
      </tags>
  </entry>
</search>
